[{"/Users/gaane1/projects/new/test-firecode/src/index.tsx":"1","/Users/gaane1/projects/new/test-firecode/src/Containers/App/index.tsx":"2","/Users/gaane1/projects/new/test-firecode/src/components/Button/index.tsx":"3","/Users/gaane1/projects/new/test-firecode/src/components/Button/types.ts":"4","/Users/gaane1/projects/new/test-firecode/src/components/InputFile/index.tsx":"5","/Users/gaane1/projects/new/test-firecode/src/components/InputLink/index.tsx":"6"},{"size":230,"mtime":1609238488235,"results":"7","hashOfConfig":"8"},{"size":2244,"mtime":1609238603948,"results":"9","hashOfConfig":"8"},{"size":273,"mtime":1609238872016,"results":"10","hashOfConfig":"8"},{"size":242,"mtime":1609238079255,"results":"11","hashOfConfig":"8"},{"size":141,"mtime":1609238596726,"results":"12","hashOfConfig":"8"},{"size":140,"mtime":1609238603123,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"8tlmx5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/gaane1/projects/new/test-firecode/src/index.tsx",[],["28","29"],"/Users/gaane1/projects/new/test-firecode/src/Containers/App/index.tsx",["30","31","32","33","34"],"import React from 'react';\nimport Button, { ButtonType } from '../../components/Button';\nimport InputLink from '../../components/InputLink';\nimport InputFile from '../../components/InputFile';\nimport { AppProps, Image } from './types';\n\nfunction App() {\n  const imagesArray = [\n    {\n      url: 'https://www.placecage.com/300/150',\n      description: 'Николас Кейдж: 300x150',\n    },\n    {\n      url: 'https://www.placecage.com/350/400',\n      description: 'Николас Кейдж: 350x400',\n    },\n    {\n      url: 'https://www.placecage.com/350/550',\n      description: 'Николас Кейдж: 350x550',\n    },\n    {\n      url: 'https://www.placecage.com/340/200',\n      description: 'Николас Кейдж: 340x200',\n    },\n    {\n      url: 'https://www.placecage.com/330/700',\n      description: 'Николас Кейдж: 330x700',\n    },\n    {\n      url: 'https://www.placecage.com/320/400',\n      description: 'Николас Кейдж: 320x400',\n    },\n    {\n      url: 'https://www.placecage.com/310/600',\n      description: 'Николас Кейдж: 310x600',\n    },\n    {\n      url: 'https://www.placecage.com/500/400',\n      description: 'Николас Кейдж: 500x400',\n    },\n    {\n      url: 'https://www.placecage.com/250/250',\n      description: 'Николас Кейдж: 250x250',\n    },\n    {\n      url: 'https://www.placecage.com/420/350',\n      description: 'Николас Кейдж: 420x350',\n    },\n    {\n      url: 'https://www.placecage.com/200/200',\n      description: 'Николас Кейдж: 200x200',\n    },\n    {\n      url: 'https://www.placecage.com/1200/700',\n      description: 'Николас Кейдж: 1200x700',\n    },\n  ];\n  const [images, setImages] = React.useState<Image[]>(imagesArray);\n  const [imageUrl, setImageUrl] = React.useState<string>('');\n  const clickHandler = () => {};\n  return (\n    <div className='App'>\n      <InputFile />\n      <InputLink />\n\n      <Button type={ButtonType.Primary} onClick={clickHandler}>\n        Send\n      </Button>\n      {images.map((image) => (\n        <div>\n          <img src={image.url} />\n          {image.description && <span>{image.description}</span>}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/gaane1/projects/new/test-firecode/src/components/Button/index.tsx",[],"/Users/gaane1/projects/new/test-firecode/src/components/Button/types.ts",[],"/Users/gaane1/projects/new/test-firecode/src/components/InputFile/index.tsx",[],"/Users/gaane1/projects/new/test-firecode/src/components/InputLink/index.tsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":5,"column":10,"nodeType":"41","messageId":"42","endLine":5,"endColumn":18},{"ruleId":"39","severity":1,"message":"43","line":58,"column":18,"nodeType":"41","messageId":"42","endLine":58,"endColumn":27},{"ruleId":"39","severity":1,"message":"44","line":59,"column":10,"nodeType":"41","messageId":"42","endLine":59,"endColumn":18},{"ruleId":"39","severity":1,"message":"45","line":59,"column":20,"nodeType":"41","messageId":"42","endLine":59,"endColumn":31},{"ruleId":"46","severity":1,"message":"47","line":71,"column":11,"nodeType":"48","endLine":71,"endColumn":34},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"@typescript-eslint/no-unused-vars","'AppProps' is defined but never used.","Identifier","unusedVar","'setImages' is assigned a value but never used.","'imageUrl' is assigned a value but never used.","'setImageUrl' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]